{
  "hash": "35dbb63a2092c7f74f9c0cab5a54cdc8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands On Exercise 10\"\nauthor: \"Liang Xiuhao\"\ndate: \"Jun 18, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n# **31Â  Information Dashboard Design: R methods**\n\n## **31.1 Overview**\n\nBy the end of this hands-on exercise, you will be able to:\n\n-   create bullet chart by using ggplot2,\n\n-   create sparklines by using ggplot2 ,\n\n-   build industry standard dashboard by using R Shiny.\n\n## **31.2 Getting started**\n\nFor the purpose of this hands-on exercise, the following R packages will be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(lubridate, ggthemes, reactable,\nreactablefmtr, gt, gtExtras, tidyverse)\n```\n:::\n\n\n-   [tidyverse](https://www.tidyverse.org/) provides a collection of functions for performing data science task such as importing, tidying, wrangling data and visualising data. It is not a single package but a collection of modern R packages including but not limited to [readr](https://readr.tidyverse.org/), [tidyr](https://tidyr.tidyverse.org/), [dplyr](https://dplyr.tidyverse.org/), [ggplot](https://ggplot2.tidyverse.org/), [tibble](https://tibble.tidyverse.org/), [stringr](https://stringr.tidyverse.org/), [forcats](https://forcats.tidyverse.org/) and [purrr](https://purrr.tidyverse.org/).\n\n-   [lubridate](https://r4va.netlify.app/chap31) provides functions to work with dates and times more efficiently.\n\n-   [ggthemes](https://r4va.netlify.app/chap31) is an extension of ggplot2. It provides additional [themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) beyond the basic themes of ggplot2.\n\n-   [gtExtras](https://jthomasmock.github.io/gtExtras/) provides some additional helper functions to assist in creating beautiful tables with [gt](https://gt.rstudio.com/), an R package specially designed for anyone to make wonderful-looking tables using the R programming language.\n\n-   [reactable](https://glin.github.io/reactable/) provides functions to create interactive data tables for R, based on the [React Table](https://github.com/tanstack/table/tree/v7) library and made with [reactR](https://github.com/react-R/reactR).\n\n-   [reactablefmtr](https://kcuilla.github.io/reactablefmtr/) provides various features to streamline and enhance the styling of interactive reactable tables with easy-to-use and highly-customizable functions and themes.\n\n## **31.3 Importing Microsoft Access database**\n\n### **31.3.1 The data set**\n\nFor the purpose of this study, a personal database in Microsoft Access mdb format called *Coffee Chain* will be used.\n\n### **31.3.2 Importing database into R**\n\nIn the code chunk below, `odbcConnectAccess()` of [**RODBC**](https://cran.r-project.org/web/packages/RODBC/) package is used used to import a database query table into R.\n\n```{}\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}